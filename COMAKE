#edit-mode: -*- python -*-
#coding:gbk

WORKROOT('../../../')

import commands
getRevCommand='$(shell git rev-parse --short HEAD)'

CXXFLAGS('-O2 -g -pipe -Wall -W -Werror -fPIC -fstrict-aliasing -Wno-invalid-offsetof -Wno-unused-parameter -fno-omit-frame-pointer -std=c++0x -include brpc/config.h')
CFLAGS('-O2 -g -pipe -Wall -W -Werror -fPIC -fstrict-aliasing -Wno-unused-parameter -fno-omit-frame-pointer')
CPPFLAGS('-D__const__= -DNDEBUG -DUSE_SYMBOLIZE -DNO_TCMALLOC -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS -DBRPC_REVISION=\\"%s\\"' % getRevCommand)

INCPATHS('.')

CONFIGS('third-64/gflags@gflags_2-0-0-100_PD_BL')
CONFIGS('third-64/protobuf@protobuf_2-4-1-1100_PD_BL')
CONFIGS('third-64/leveldb@leveldb_1-0-0-0_PD_BL')   # rpcz

sources = [
    "base/third_party/dmg_fp/g_fmt.cc",
    "base/third_party/dmg_fp/dtoa_wrapper.cc",
    "base/third_party/dmg_fp/dtoa.cc",
    "base/third_party/dynamic_annotations/dynamic_annotations.c",
    "base/third_party/icu/icu_utf.cc",
    "base/third_party/superfasthash/superfasthash.c",
    "base/third_party/modp_b64/modp_b64.cc",
    "base/third_party/nspr/prtime.cc",
    "base/third_party/symbolize/demangle.cc",
    "base/third_party/symbolize/symbolize.cc",
    "base/third_party/xdg_mime/xdgmime.c",
    "base/third_party/xdg_mime/xdgmimealias.c",
    "base/third_party/xdg_mime/xdgmimecache.c",
    "base/third_party/xdg_mime/xdgmimeglob.c",
    "base/third_party/xdg_mime/xdgmimeicon.c",
    "base/third_party/xdg_mime/xdgmimeint.c",
    "base/third_party/xdg_mime/xdgmimemagic.c",
    "base/third_party/xdg_mime/xdgmimeparent.c",
    "base/third_party/xdg_user_dirs/xdg_user_dir_lookup.cc",
    "base/third_party/snappy/snappy-sinksource.cc",
    "base/third_party/snappy/snappy-stubs-internal.cc",
    "base/third_party/snappy/snappy.cc",
    "base/third_party/murmurhash3/murmurhash3.cpp",
    "base/allocator/type_profiler_control.cc",
    "base/arena.cpp",
    "base/at_exit.cc",
    "base/atomicops_internals_x86_gcc.cc",
    "base/barrier_closure.cc",
    "base/base_paths.cc",
    "base/base_paths_posix.cc",
    "base/base64.cc",
    "base/base_switches.cc",
    "base/big_endian.cc",
    "base/bind_helpers.cc",
    "base/build_time.cc",
    "base/callback_helpers.cc",
    "base/callback_internal.cc",
    "base/command_line.cc",
    "base/cpu.cc",
    "base/debug/alias.cc",
    "base/debug/asan_invalid_access.cc",
    "base/debug/crash_logging.cc",
    "base/debug/debugger.cc",
    "base/debug/debugger_posix.cc",
    "base/debug/dump_without_crashing.cc",
    "base/debug/proc_maps_linux.cc",
    "base/debug/stack_trace.cc",
    "base/debug/stack_trace_posix.cc",
    "base/environment.cc",
    "base/files/file.cc",
    "base/files/file_posix.cc",
    "base/files/file_enumerator.cc",
    "base/files/file_enumerator_posix.cc",
    "base/files/file_path.cc",
    "base/files/file_path_constants.cc",
    "base/files/memory_mapped_file.cc",
    "base/files/memory_mapped_file_posix.cc",
    "base/files/scoped_file.cc",
    "base/files/scoped_temp_dir.cc",
    "base/file_util.cc",
    "base/file_util_linux.cc",
    "base/file_util_posix.cc",
    "base/guid.cc",
    "base/guid_posix.cc",
    "base/hash.cc",
    "base/lazy_instance.cc",
    "base/location.cc",
    "base/md5.cc",
    "base/memory/aligned_memory.cc",
    "base/memory/ref_counted.cc",
    "base/memory/ref_counted_memory.cc",
    "base/memory/shared_memory_posix.cc",
    "base/memory/singleton.cc",
    "base/memory/weak_ptr.cc",
    "base/nix/mime_util_xdg.cc",
    "base/nix/xdg_util.cc",
    "base/path_service.cc",
    "base/posix/file_descriptor_shuffle.cc",
    "base/posix/global_descriptors.cc",
    "base/process/internal_linux.cc",
    "base/process/kill.cc",
    "base/process/kill_posix.cc",
    "base/process/launch.cc",
    "base/process/launch_posix.cc",
    "base/process/memory.cc",
    "base/process/memory_linux.cc",
    "base/process/process_handle_linux.cc",
    "base/process/process_handle_posix.cc",
    "base/process/process_info_linux.cc",
    "base/process/process_iterator.cc",
    "base/process/process_iterator_linux.cc",
    "base/process/process_linux.cc",
    "base/process/process_metrics.cc",
    "base/process/process_metrics_linux.cc",
    "base/process/process_metrics_posix.cc",
    "base/process/process_posix.cc",
    "base/rand_util.cc",
    "base/rand_util_posix.cc",
    "base/fast_rand.cpp",
    "base/safe_strerror_posix.cc",
    "base/sha1_portable.cc",
    "base/strings/latin1_string_conversions.cc",
    "base/strings/nullable_string16.cc",
    "base/strings/safe_sprintf.cc",
    "base/strings/string16.cc",
    "base/strings/string_number_conversions.cc",
    "base/strings/string_split.cc",
    "base/strings/string_piece.cc",
    "base/strings/string_util.cc",
    "base/strings/string_util_constants.cc",
    "base/strings/stringprintf.cc",
    "base/strings/sys_string_conversions_posix.cc",
    "base/strings/utf_offset_string_conversions.cc",
    "base/strings/utf_string_conversion_utils.cc",
    "base/strings/utf_string_conversions.cc",
    "base/synchronization/cancellation_flag.cc",
    "base/synchronization/condition_variable_posix.cc",
    "base/synchronization/waitable_event_posix.cc",
    "base/sys_info.cc",
    "base/sys_info_linux.cc",
    "base/sys_info_posix.cc",
    "base/threading/non_thread_safe_impl.cc",
    "base/threading/platform_thread_linux.cc",
    "base/threading/platform_thread_posix.cc",
    "base/threading/simple_thread.cc",
    "base/threading/thread_checker_impl.cc",
    "base/threading/thread_collision_warner.cc",
    "base/threading/thread_id_name_manager.cc",
    "base/threading/thread_local_posix.cc",
    "base/threading/thread_local_storage.cc",
    "base/threading/thread_local_storage_posix.cc",
    "base/threading/thread_restrictions.cc",
    "base/threading/watchdog.cc",
    "base/time/clock.cc",
    "base/time/default_clock.cc",
    "base/time/default_tick_clock.cc",
    "base/time/tick_clock.cc",
    "base/time/time.cc",
    "base/time/time_posix.cc",
    "base/version.cc",
    "base/logging.cc",
    
    "base/class_name.cpp",
    "base/errno.cpp", 
    "base/find_cstr.cpp",
    "base/status.cpp",
    "base/string_printf.cpp",
    "base/thread_local.cpp",
    "base/unix_socket.cpp",
    "base/endpoint.cpp",
    "base/fd_utility.cpp",
    "base/files/temp_file.cpp",
    "base/files/file_watcher.cpp",
    "base/time.cpp",
    "base/zero_copy_stream_as_streambuf.cpp",
    "base/crc32c.cc",
    "base/containers/case_ignored_flat_map.cpp",
    "base/iobuf.cpp"
]

LDFLAGS('-lpthread -lrt -lssl -lcrypto -ldl -lz')


def GenProtoCpp(filelist):
    protoc_bin=ENV.WorkRoot() + "/third-64/protobuf/bin/protoc"
    import commands
    for path in filelist.split(' '):
        part = path.partition('/')
        removed_ext = os.path.splitext(path)[0]
        cpp_path = removed_ext + '.pb.cc'
        cmd = protoc_bin + \
              ' --proto_path=' + part[0] + \
              ' --proto_path=' + ENV.WorkRoot() + '/third-64/protobuf/include/' + \
              ' --cpp_out=. ' + path
        commands.getoutput(cmd);
        TARGET(cpp_path, Prefixes(path + ' ' + protoc_bin), ShellCommands(cmd), CleanFiles(''))

GenProtoCpp(GLOB('./*.proto'))
GenProtoCpp(GLOB('./brpc/*.proto'))
GenProtoCpp(GLOB('./brpc/policy/*.proto'))

StaticLibrary('base', Sources(' '.join(sources)))
StaticLibrary('bvar',Sources(GLOB('bvar/*.cpp bvar/detail/*.cpp')))
StaticLibrary('bthread', Sources(GLOB('bthread/*.cpp')))
StaticLibrary('json2pb', Sources(GLOB('json2pb/*.cpp')))
StaticLibrary('mcpack2pb', Sources(GLOB('mcpack2pb/*.cpp idl_options.pb.cc'), 
              HeaderFiles(GLOB('mcpack2pb/*.h'))) - Sources('mcpack2pb/generator.cpp'))
Application('protoc-gen-mcpack', Sources('mcpack2pb/generator.cpp'),
            Libraries('libmcpack2pb.a libbase.a libbthread.a libbvar.a'))
StaticLibrary('brpc',
              Sources(GLOB('brpc/*.cpp brpc/policy/*.cpp brpc/builtin/*.cpp brpc/details/*.cpp brpc/*.pb.cc brpc/policy/*.pb.cc'))
              - Sources('brpc/policy/baidu_naming_service.cpp brpc/policy/giano_authenticator.cpp'))

TARGET('output/include', PhonyMode('true'), Prefixes('libbase.a libbvar.a libbthread.a libjson2pb.a libmcpack2pb.a libbrpc.a'),
       ShellCommands("for dir in `find base bvar bthread brpc -type f -name \"*.h\" -exec dirname {} \\; | sort | uniq`; do mkdir -p output/include/$$dir && cp $$dir/*.h output/include/$$dir/; done; for dir in `find base bvar bthread brpc -type f -name \"*.hpp\" -exec dirname {} \\; | sort | uniq`; do mkdir -p output/include/$$dir && cp $$dir/*.hpp output/include/$$dir/; done"),
       CleanFiles('output/include'))
