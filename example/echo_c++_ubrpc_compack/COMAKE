#edit-mode: -*- python -*-
#coding:gbk

#到代码树根目录的相对路径
WORKROOT('../../../../../')

#C++编译参数.
CPPFLAGS('-std=c++0x -g -DNDEBUG -O2 -pipe -W -Wall -Werror -fPIC -fno-omit-frame-pointer -Wno-deprecated -Wno-unused-parameter')
#在目前的版本中，只要用到baidu-rpc的项目都强烈建议加下面一行,以避免在gcc4下的误优化
CPPFLAGS('-D__const__=')

#为了方便本例通过comake2 -UB下载依赖，我们直接import上层baidu-rpc的依赖，
#在你自己的项目中，你得把下面三行改成: CONFIGS('public/baidu-rpc@ci-base')
INCPATHS('../../')
LIBS(GLOB('../../output/lib/lib*.a'))
ImportConfigsFrom('../../')

#链接参数.
LDFLAGS('-lpthread -lrt -lssl -lcrypto -ldl -lz')

PROTOC(ENV.WorkRoot()+"/third-64/protobuf/bin/protoc")
PROTOFLAGS("--plugin=protoc-gen-mcpack=../../protoc-gen-mcpack --mcpack_out=.")
PROTOFLAGS('--proto_path=../../')
PROTOFLAGS('--proto_path=' + ENV.WorkRoot() + '/third-64/protobuf/include/')

#可执行文件
Application('echo_client', Sources('client.cpp echo.proto'))
Application('echo_server', Sources('server.cpp echo.proto'))
